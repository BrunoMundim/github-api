{"ast":null,"code":"var _jsxFileName = \"/home/mundim/WORKSPACE/Estudo Programa\\xE7\\xE3o/eduzz-fullstack-developer-3/React/Criando um front-end totalmente componentizado na pr\\xE1tica/github-api/src/providers/GithubProviders.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GithubContext = /*#__PURE__*/createContext({\n  loading: false,\n  user: {},\n  repositories: [],\n  starred: []\n});\n\nconst GithubProviders = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [githubState, setGithubState] = useState({\n    hasUser: false,\n    loading: false,\n    user: {\n      avatar: undefined,\n      login: undefined,\n      name: undefined,\n      html_url: undefined,\n      blog: undefined,\n      company: undefined,\n      location: undefined,\n      followers: 0,\n      following: 0,\n      publicGists: 0,\n      publicRepos: 0\n    },\n    repositories: [],\n    starred: []\n  });\n\n  const getUser = username => {\n    setGithubState(prevState => ({ ...prevState,\n      loading: !prevState.loading\n    }));\n    api.get(`users/${username}`).then(_ref2 => {\n      let {\n        data\n      } = _ref2;\n      setGithubState(prevState => ({ ...prevState,\n        hasUser: true,\n        user: {\n          avatar_url: data.avatar_url,\n          login: data.login,\n          name: data.name,\n          html_url: data.html_url,\n          blog: data.blog,\n          company: data.company,\n          location: data.location,\n          followers: data.followers,\n          following: data.following,\n          public_gists: data.public_gists,\n          public_repos: data.public_repos\n        }\n      }));\n    }).finally(() => {\n      setGithubState(prevState => ({ ...prevState,\n        loading: !prevState.loading\n      }));\n    });\n  };\n\n  const getUserRepos = () => {\n    api.get(`users/${githubState.user.login}/repos`).then(_ref3 => {\n      let {\n        data\n      } = _ref3;\n      setGithubState(prevState => ({ ...prevState,\n        repositories: data\n      }));\n    });\n  };\n\n  const contextValue = {\n    githubState,\n    getUser: useCallback(username => getUser(username), [])\n  };\n  return /*#__PURE__*/_jsxDEV(GithubContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GithubProviders, \"DHZILg+pJabWGjV9JNg45Aob30Y=\");\n\n_c = GithubProviders;\nGithubProviders.propTypes = {\n  children: PropTypes.any\n};\nexport default GithubProviders;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubProviders\");","map":{"version":3,"sources":["/home/mundim/WORKSPACE/Estudo Programação/eduzz-fullstack-developer-3/React/Criando um front-end totalmente componentizado na prática/github-api/src/providers/GithubProviders.js"],"names":["React","createContext","useCallback","useState","PropTypes","api","GithubContext","loading","user","repositories","starred","GithubProviders","children","githubState","setGithubState","hasUser","avatar","undefined","login","name","html_url","blog","company","location","followers","following","publicGists","publicRepos","getUser","username","prevState","get","then","data","avatar_url","public_gists","public_repos","finally","getUserRepos","contextValue","propTypes","any"],"mappings":"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","sourcesContent":["import React, { createContext, useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport api from '../services/api'\n\nexport const GithubContext = createContext({\n  loading: false,\n  user: {},\n  repositories: [],\n  starred: [],\n});\n\nconst GithubProviders = ({ children }) => {  \n  const [githubState, setGithubState] = useState({\n    hasUser: false,\n    loading: false,\n    user: {\n      avatar: undefined,\n      login: undefined,\n      name: undefined,\n      html_url: undefined,\n      blog: undefined,\n      company: undefined,\n      location: undefined,\n      followers: 0,\n      following: 0,\n      publicGists: 0,\n      publicRepos: 0,      \n    },\n    repositories: [],\n    starred: [],\n  });\n\n  const getUser = ( username ) => {\n    setGithubState((prevState) => ({\n      ...prevState,\n      loading: !prevState.loading,\n    }));\n    \n    api\n      .get(`users/${username}`)\n      .then(({ data }) => {\n        setGithubState((prevState) => ({\n          ...prevState,\n          hasUser: true,\n          user: {\n            avatar_url: data.avatar_url,\n            login: data.login,\n            name: data.name,\n            html_url: data.html_url,\n            blog: data.blog,\n            company: data.company,\n            location: data.location,\n            followers: data.followers,\n            following: data.following,\n            public_gists: data.public_gists,\n            public_repos: data.public_repos,\n          },\n        }));\n      }).finally(() => {\n        setGithubState((prevState) => ({\n          ...prevState,\n          loading: !prevState.loading,\n        }));\n      })\n  }\n\n  const getUserRepos = () => {\n    \n    api\n      .get(`users/${githubState.user.login}/repos`)\n      .then(({ data }) => {\n        setGithubState((prevState) => ({\n          ...prevState,\n          repositories: data,\n        }));\n      })\n  }\n\n  const contextValue = {\n    githubState,\n    getUser: useCallback((username) => getUser(username), []),\n    \n  }\n\n  return (\n    <GithubContext.Provider \n      value = { contextValue }\n    >\n      { children }\n      \n    </GithubContext.Provider>\n  );  \n}\n\nGithubProviders.propTypes = {\n  children: PropTypes.any,\n}\n\nexport default GithubProviders;"]},"metadata":{},"sourceType":"module"}