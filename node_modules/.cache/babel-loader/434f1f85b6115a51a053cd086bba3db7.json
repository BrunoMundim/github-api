{"ast":null,"code":"var _jsxFileName = \"/home/mundim/WORKSPACE/Estudo Programa\\xE7\\xE3o/eduzz-fullstack-developer-3/React/Criando um front-end totalmente componentizado na pr\\xE1tica/github-api/src/components/repositories/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport useGithub from '../../hooks/githubHooks';\nimport RepositoryItem from '../repository-item';\nimport * as S from './styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Repositories = () => {\n  _s();\n\n  const {\n    githubState,\n    getUserRepos,\n    getUserStarred\n  } = useGithub();\n  const [hasUserForSearchRepos, setHasUserForSearchRepos] = useState(false);\n  useEffect(() => {\n    if (githubState.user.login) {\n      getUserRepos(githubState.user.login);\n      getUserStarred(githubState.user.login);\n    }\n\n    setHasUserForSearchRepos(githubState.repositories);\n  }, [githubState.user]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: hasUserForSearchRepos ? /*#__PURE__*/_jsxDEV(S.WrapperTabs, {\n      selectedTabClassName: \"is-selected\",\n      selectedTabPanelClassName: \"is-selected\",\n      children: [/*#__PURE__*/_jsxDEV(S.WrapperTabList, {\n        children: [/*#__PURE__*/_jsxDEV(S.WrapperTab, {\n          children: \"Repositories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(S.WrapperTab, {\n          children: \"Starred\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(S.WrapperTabPanel, {\n        children: /*#__PURE__*/_jsxDEV(S.WrapperList, {\n          children: githubState.repositories.map(item => /*#__PURE__*/_jsxDEV(RepositoryItem, {\n            name: item.name,\n            linkToRepo: item.full_name,\n            fullName: item.full_name\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(S.WrapperTabPanel, {\n        children: /*#__PURE__*/_jsxDEV(S.WrapperList, {\n          children: githubState.starred.map(item => /*#__PURE__*/_jsxDEV(RepositoryItem, {\n            name: item.name,\n            linkToRepo: `github.com/${item.html_url}`,\n            fullName: item.full_name\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false);\n};\n\n_s(Repositories, \"7XjEKmZGOvDgGBNZXwu5IAkzPYQ=\", false, function () {\n  return [useGithub];\n});\n\n_c = Repositories;\nexport default Repositories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Repositories\");","map":{"version":3,"sources":["/home/mundim/WORKSPACE/Estudo Programação/eduzz-fullstack-developer-3/React/Criando um front-end totalmente componentizado na prática/github-api/src/components/repositories/index.js"],"names":["React","useEffect","useState","useGithub","RepositoryItem","S","Repositories","githubState","getUserRepos","getUserStarred","hasUserForSearchRepos","setHasUserForSearchRepos","user","login","repositories","map","item","name","full_name","id","starred","html_url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,OAAO,KAAKC,CAAZ,MAAmB,UAAnB;;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAEzB,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,YAAf;AAA6BC,IAAAA;AAA7B,MAAgDN,SAAS,EAA/D;AACA,QAAM,CAACO,qBAAD,EAAwBC,wBAAxB,IAAoDT,QAAQ,CAAC,KAAD,CAAlE;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGM,WAAW,CAACK,IAAZ,CAAiBC,KAApB,EAA2B;AACzBL,MAAAA,YAAY,CAACD,WAAW,CAACK,IAAZ,CAAiBC,KAAlB,CAAZ;AACAJ,MAAAA,cAAc,CAACF,WAAW,CAACK,IAAZ,CAAiBC,KAAlB,CAAd;AACD;;AACDF,IAAAA,wBAAwB,CAACJ,WAAW,CAACO,YAAb,CAAxB;AAED,GAPQ,EAON,CAACP,WAAW,CAACK,IAAb,CAPM,CAAT;AASA,sBACE;AAAA,cACGF,qBAAqB,gBACpB,QAAC,CAAD,CAAG,WAAH;AACE,MAAA,oBAAoB,EAAC,aADvB;AAEE,MAAA,yBAAyB,EAAC,aAF5B;AAAA,8BAIE,QAAC,CAAD,CAAG,cAAH;AAAA,gCACE,QAAC,CAAD,CAAG,UAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,CAAD,CAAG,UAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAQE,QAAC,CAAD,CAAG,eAAH;AAAA,+BACE,QAAC,CAAD,CAAG,WAAH;AAAA,oBACGH,WAAW,CAACO,YAAZ,CAAyBC,GAAzB,CAA8BC,IAAD,iBAC5B,QAAC,cAAD;AAEE,YAAA,IAAI,EAAEA,IAAI,CAACC,IAFb;AAGE,YAAA,UAAU,EAAED,IAAI,CAACE,SAHnB;AAIE,YAAA,QAAQ,EAAEF,IAAI,CAACE;AAJjB,aACOF,IAAI,CAACG,EADZ;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF,eAoBE,QAAC,CAAD,CAAG,eAAH;AAAA,+BACA,QAAC,CAAD,CAAG,WAAH;AAAA,oBACKZ,WAAW,CAACa,OAAZ,CAAoBL,GAApB,CAAyBC,IAAD,iBACvB,QAAC,cAAD;AAEE,YAAA,IAAI,EAAEA,IAAI,CAACC,IAFb;AAGE,YAAA,UAAU,EAAG,cAAaD,IAAI,CAACK,QAAS,EAH1C;AAIE,YAAA,QAAQ,EAAEL,IAAI,CAACE;AAJjB,aACOF,IAAI,CAACG,EADZ;AAAA;AAAA;AAAA;AAAA,kBADD;AADL;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cApBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADoB,gBAkCtB;AAnCF,mBADF;AAuCD,CArDD;;GAAMb,Y;UAEkDH,S;;;KAFlDG,Y;AAuDN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport useGithub from '../../hooks/githubHooks';\nimport RepositoryItem from '../repository-item';\nimport * as S from './styled';\n\nconst Repositories = () => {\n\n  const { githubState, getUserRepos, getUserStarred } = useGithub();\n  const [hasUserForSearchRepos, setHasUserForSearchRepos] = useState(false)\n\n  useEffect(() => {\n    if(githubState.user.login) {\n      getUserRepos(githubState.user.login);\n      getUserStarred(githubState.user.login);\n    }\n    setHasUserForSearchRepos(githubState.repositories);\n\n  }, [githubState.user])\n\n  return (\n    <>\n      {hasUserForSearchRepos ?\n        <S.WrapperTabs\n          selectedTabClassName='is-selected'\n          selectedTabPanelClassName='is-selected'\n        >\n          <S.WrapperTabList>\n            <S.WrapperTab>Repositories</S.WrapperTab>\n            <S.WrapperTab>Starred</S.WrapperTab>\n          </S.WrapperTabList>\n          <S.WrapperTabPanel>\n            <S.WrapperList>\n              {githubState.repositories.map((item) => (\n                <RepositoryItem\n                  key={item.id}\n                  name={item.name}\n                  linkToRepo={item.full_name}\n                  fullName={item.full_name}\n                />\n              ))} \n            </S.WrapperList>                   \n          </S.WrapperTabPanel>\n          <S.WrapperTabPanel>\n          <S.WrapperList>\n              {githubState.starred.map((item) => (\n                <RepositoryItem\n                  key={item.id}\n                  name={item.name}\n                  linkToRepo={`github.com/${item.html_url}`}\n                  fullName={item.full_name}\n                />\n              ))} \n            </S.WrapperList>  \n          </S.WrapperTabPanel>\n        </S.WrapperTabs>\n    : <></>}</>\n    \n  );\n}\n\nexport default Repositories;"]},"metadata":{},"sourceType":"module"}