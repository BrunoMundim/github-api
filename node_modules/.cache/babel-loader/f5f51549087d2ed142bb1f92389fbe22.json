{"ast":null,"code":"var _jsxFileName = \"/home/mundim/WORKSPACE/Estudo Programa\\xE7\\xE3o/eduzz-fullstack-developer-3/React/Criando um front-end totalmente componentizado na pr\\xE1tica/github-api/src/providers/GithubProviders.js\";\nimport React, { createContext } from 'react';\nimport PropTypes from 'prop-types';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GithubContext = /*#__PURE__*/createContext({\n  loading: false,\n  user: {},\n  repositories: [],\n  starred: []\n});\n\nconst GithubProviders = _ref => {\n  let {\n    children\n  } = _ref;\n\n  /*  const [githubState, setGithubState] = useState({\n      loading: false,\n      user: {\n        login: undefined,\n        name: undefined,\n        html_url: undefined,\n        blog: undefined,\n        company: undefined,\n        location: undefined,\n        followers: 0,\n        following: 0,\n        publicGists: 0,\n        publicRepos: 0,      \n      },\n      repositories: [],\n      starred: [],\n    })*/\n  const getUser = username => {};\n\n  const contextValue = {//githubState,\n  };\n  return /*#__PURE__*/_jsxDEV(GithubContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_c = GithubProviders;\nGithubProviders.propTypes = {\n  children: PropTypes.any\n};\nexport default GithubProviders;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubProviders\");","map":{"version":3,"sources":["/home/mundim/WORKSPACE/Estudo Programação/eduzz-fullstack-developer-3/React/Criando um front-end totalmente componentizado na prática/github-api/src/providers/GithubProviders.js"],"names":["React","createContext","PropTypes","api","GithubContext","loading","user","repositories","starred","GithubProviders","children","getUser","username","contextValue","propTypes","any"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;;AAEA,OAAO,MAAMC,aAAa,gBAAGH,aAAa,CAAC;AACzCI,EAAAA,OAAO,EAAE,KADgC;AAEzCC,EAAAA,IAAI,EAAE,EAFmC;AAGzCC,EAAAA,YAAY,EAAE,EAH2B;AAIzCC,EAAAA,OAAO,EAAE;AAJgC,CAAD,CAAnC;;AAOP,MAAMC,eAAe,GAAG,QAAkB;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE,QAAMC,OAAO,GAAKC,QAAF,IAAgB,CAE/B,CAFD;;AAIA,QAAMC,YAAY,GAAG,CACnB;AADmB,GAArB;AAKA,sBACE,QAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAKA,YADZ;AAAA,cAGIH;AAHJ;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CArCD;;KAAMD,e;AAuCNA,eAAe,CAACK,SAAhB,GAA4B;AAC1BJ,EAAAA,QAAQ,EAAER,SAAS,CAACa;AADM,CAA5B;AAIA,eAAeN,eAAf","sourcesContent":["import React, { createContext } from 'react';\nimport PropTypes from 'prop-types';\nimport api from '../services/api'\n\nexport const GithubContext = createContext({\n  loading: false,\n  user: {},\n  repositories: [],\n  starred: [],\n});\n\nconst GithubProviders = ({ children }) => {\n  \n/*  const [githubState, setGithubState] = useState({\n    loading: false,\n    user: {\n      login: undefined,\n      name: undefined,\n      html_url: undefined,\n      blog: undefined,\n      company: undefined,\n      location: undefined,\n      followers: 0,\n      following: 0,\n      publicGists: 0,\n      publicRepos: 0,      \n    },\n    repositories: [],\n    starred: [],\n  })*/\n\n  const getUser = ( username ) => {\n\n  }\n\n  const contextValue = {\n    //githubState,\n    \n  }\n\n  return (\n    <GithubContext.Provider \n      value = { contextValue }\n    >\n      { children }\n      \n    </GithubContext.Provider>\n  );  \n}\n\nGithubProviders.propTypes = {\n  children: PropTypes.any,\n}\n\nexport default GithubProviders;"]},"metadata":{},"sourceType":"module"}